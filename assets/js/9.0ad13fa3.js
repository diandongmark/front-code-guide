(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{286:function(a,t,e){"use strict";e.r(t);var s=e(14),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),t("ul",[t("li",[a._v("标准变量采用 "),t("em",[t("strong",[a._v("“驼峰式命名”")])])]),a._v(" "),t("li",[a._v("特殊名称的命名不需要按照 "),t("em",[t("strong",[a._v("“驼峰是命名”")])]),a._v(" ，例举：\n"),t("ul",[t("li",[t("code",[a._v("Android")]),a._v(" 在变量名中大写第一个字母")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let Android = getSystemOs()\n")])])]),t("ul",[t("li",[t("code",[a._v("iOS")]),a._v(" 在变量名中小写第一个，大写后两个字母")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let iOS = getSystemOs()\n")])])]),t("ul",[t("li",[t("em",[t("strong",[a._v("常量")])]),a._v(" 全大写，用下划线连接")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const PI = 3.1415926\nconst CHINA_TEL_TOP = '+86'\n")])])]),t("ul",[t("li",[a._v("构造函数，大写第一个字母")])])]),a._v(" "),t("li",[a._v("其他特殊名称，没有明确的对、错，现统一格式为以 "),t("em",[t("strong",[a._v("单词")])]),a._v(" 划分的 "),t("em",[t("strong",[a._v("小驼峰格式")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("userinfo")]),a._v(" // userinfo 为单词")]),a._v(" "),t("li",[t("code",[a._v("username")]),a._v(" // username 为单词")]),a._v(" "),t("li",[t("code",[a._v("openId")]),a._v(" // 小驼峰")]),a._v(" "),t("li",[t("code",[a._v("appId")]),a._v(" // 小驼峰")])])])]),a._v(" "),t("h2",{attrs:{id:"注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),t("h3",{attrs:{id:"单行注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[a._v("#")]),a._v(" 单行注释")]),a._v(" "),t("ul",[t("li",[a._v("双斜线后，必须跟一个空格；")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("✅\n// 注释\n\n❌\n//注释\n")])])]),t("ul",[t("li",[a._v("缩进与下一行代码保持一致；")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("✅\nlet test = {\n  a: 1,\n  b: 2,\n  // 测试\n  c: 3\n}\n\n❌\nlet test = {\n  a: 1,\n  b: 2,\n// 测试\n  c: 3\n}\n")])])]),t("ul",[t("li",[a._v("可位于一个代码行的末尾，与代码间隔一个空格。")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("✅\nlet a = 123 // 测试\n\n❌\nlet a = 123//测试\nlet a = 123// 测试\nlet a = 123       // 测试\n")])])]),t("h3",{attrs:{id:"多行注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多行注释"}},[a._v("#")]),a._v(" 多行注释")]),a._v(" "),t("ul",[t("li",[a._v("最少三行, "),t("code",[a._v("*")]),a._v("后跟一个空格")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("/**\n * 正确示例\n */\n\n/**\n *错误示例\n */\n\n/** 错误示例\n*/\n")])])]),t("ul",[t("li",[a._v("多行注释的使用时机：\n"),t("ul",[t("li",[a._v("难于理解的代码段")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 代码逻辑复杂时，应注释好逻辑思路\nif() {\n  if() {}\n} else {\n  if() {}\n  callback()\n}\n")])])]),t("ul",[t("li",[a._v("可能存在错误的代码段")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 在不确定的逻辑，应说明情况\nif(a==b || a==c || a==d) {}\n")])])]),t("ul",[t("li",[a._v("浏览器特殊的HACK代码")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 应注释为何使用插件，解决了什么问题\nconst hackPlug = hack()\nconst fixBug = hackPlug()\n")])])]),t("ul",[t("li",[a._v("业务逻辑强相关的代码")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 代码逻辑拆解封装后，应注释关联性\nfunction (a) {\n  doSome...\n  return a\n}\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"文档型注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档型注释"}},[a._v("#")]),a._v(" 文档型注释")]),a._v(" "),t("ul",[t("li",[a._v("各类标签"),t("code",[a._v("@param, @method")]),a._v("等可参考 "),t("a",{attrs:{href:"http://yuri4ever.github.io/jsdoc/#@module",target:"_blank",rel:"noopener noreferrer"}},[a._v("JSDoc Guide"),t("OutboundLink")],1)])]),a._v(" "),t("p",[t("code",[a._v("注")]),a._v(" 不做强制的格式要求，但应遵循基本规则，并能正确明示参数属性的用途")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 函数逻辑中，逻辑注释的情况较为多\nmethod: {\n  ✅\n  /**\n   * 获取参数，处理 router 路中，query 不能获取的情况\n   * @params { string } str 传入的 url 字符\n   * @returns { object } 返回处理完的参数对象\n   */\n  getParams(str) {}\n\n  ✅\n  /**\n   * 获取参数，处理 router 路中，query 不能获取的情况\n   * str 传入的 url 字符\n   * 返回处理完的参数对象\n   */\n  getParams(str) {}\n\n  ❗️ 没有错误，但应尽量描述清晰  \n  // 获取 url 参数转换成对象\n  getParams(str) {}\n\n  ❌\n  getPrams(str) {}\n}\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);